"use strict";function _interopDefault(r){return r&&"object"==typeof r&&"default"in r?r.default:r}var curry=_interopDefault(require("ramda/src/curry")),cond=_interopDefault(require("ramda/src/cond")),isNil=_interopDefault(require("ramda/src/isNil")),identity=_interopDefault(require("ramda/src/identity")),is=_interopDefault(require("ramda/src/is")),T=_interopDefault(require("ramda/src/T")),gte=_interopDefault(require("ramda/src/gte")),complement=_interopDefault(require("ramda/src/complement")),eqProps=_interopDefault(require("ramda/src/eqProps")),isEmpty=_interopDefault(require("ramda/src/isEmpty")),anyPass=_interopDefault(require("ramda/src/anyPass")),pipe=_interopDefault(require("ramda/src/pipe")),toPairs=_interopDefault(require("ramda/src/toPairs")),map=_interopDefault(require("ramda/src/map")),adjust=_interopDefault(require("ramda/src/adjust")),fromPairs=_interopDefault(require("ramda/src/fromPairs")),range=_interopDefault(require("ramda/src/range")),split=_interopDefault(require("ramda/src/split")),path=_interopDefault(require("ramda/src/path")),newStartsWith=_interopDefault(require("ramda/src/startsWith")),newEndsWith=_interopDefault(require("ramda/src/endsWith")),find=_interopDefault(require("ramda/src/find")),propEq=_interopDefault(require("ramda/src/propEq")),findIndex=_interopDefault(require("ramda/src/findIndex")),log=function(r){return console.log(r),r},trace=curry(function(r,e){return console.log(r),e}),toNumber=cond([[isNil,identity],[is(Number),identity],[T,function(r){return Number(r)}]]),toDate=function(r){return cond([[isNil,identity],[is(Object),identity],[T,function(r){return new Date(r)}]])(r)},isWithin=curry(function(r,e,t){var i=is(Number);return i(r)&&i(e)&&i(t)&&gte(t,r)&&gte(e,t)}),isNotWithin=complement(isWithin),eqLength=eqProps("length"),random=function(r,e){return Math.floor(Math.random()*(e-r+1))+r},sample=function(r){if(isNil(r)||isEmpty(r))return null;var e=r.length-1;return r[random(0,e)]},isNilOrEmpty=anyPass([isNil,isEmpty]),isNotNil=complement(isNil),isUndefined=function(r){return void 0===r},mapKeys=curry(function(r,e){return pipe(toPairs,map(adjust(r,0)),fromPairs)(e)}),rangeStep=curry(function(r,e,t){return 0===r?null:r>0&&t<e?null:r<0&&t>e?null:map(function(t){return e+r*t},range(0,1+(t-e)/r>>>0))}),dotPath=curry(function(r,e){return path(split(".",r),e)}),startsWith=curry(function(r,e){return newStartsWith(r,e)}),endsWith=curry(function(r,e){return newEndsWith(r,e)}),findByProp=curry(function(r,e,t){return find(propEq(r,e))(t)}),findIndexByProp=curry(function(r,e,t){return findIndex(propEq(r,e))(t)}),Ramdasauce={log:log,trace:trace,toNumber:toNumber,toDate:toDate,isWithin:isWithin,isNotWithin:isNotWithin,eqLength:eqLength,random:random,sample:sample,isNilOrEmpty:isNilOrEmpty,isNotNil:isNotNil,isUndefined:isUndefined,mapKeys:mapKeys,rangeStep:rangeStep,dotPath:dotPath,startsWith:startsWith,endsWith:endsWith,findByProp:findByProp,findIndexByProp:findIndexByProp};module.exports=Ramdasauce,module.exports=Ramdasauce;
